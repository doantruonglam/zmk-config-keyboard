/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

/dts-v1/;
#include "hades40.dtsi"


/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
		zmk,underglow = &led_strip;
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder>;
	};

	
	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)  RC(1,11)
            RC(1,0)  RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)     RC(1,10)
            RC(2,0)   RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)        RC(2,10)
                    RC(3,0)   RC(3,1)                      RC(3,5)                           RC(3,8) RC(3,10) RC(3,11)
        >;
	};


	kscan0: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";

		col-gpios
			= <&gpio0 29 GPIO_ACTIVE_HIGH> // col 0
			, <&gpio0 31 GPIO_ACTIVE_HIGH> // col 1
			, <&gpio0 30 GPIO_ACTIVE_HIGH> // col 2
			, <&gpio0 6 GPIO_ACTIVE_HIGH> // col 3
			, <&gpio0 8 GPIO_ACTIVE_HIGH> // col 4
			, <&gpio0 12 GPIO_ACTIVE_HIGH> // col 5
			, <&gpio0 9 GPIO_ACTIVE_HIGH> // col 6
			, <&gpio0 10 GPIO_ACTIVE_HIGH> // col 7
			, <&gpio0 5 GPIO_ACTIVE_HIGH> // col 8
			, <&gpio1 9 GPIO_ACTIVE_HIGH> // col 9
			, <&gpio0 13 GPIO_ACTIVE_HIGH> // col 10
			, <&gpio0 24 GPIO_ACTIVE_HIGH> // col 11
			;

		row-gpios
			= <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 0
			, <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
			, <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
			, <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
			;
	};

	leds {
		compatible = "gpio-leds";
		blue_led: led_0 {
			gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
			label = "Blue LED";
		};
	};

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
		status = "okay";
    };

	vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		io-channels = <&adc 2>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 820000)>;
	};
};

&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    // WS2812B pinout (PX.Y = 32*X+Y)
    mosi-pin = <3>;
    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
    sck-pin = <36>;
    miso-pin = <38>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <12>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
    };
};

 &i2c0 {
 	sda-pin = <15>;
	scl-pin = <17>;

 	oled: ssd1306@3c {
 		compatible = "solomon,ssd1306fb";
 		reg = <0x3c>;
 		label = "DISPLAY";
 		width = <128>;
 		height = <32>;
 		segment-offset = <0>;
 		page-offset = <0>;
 		display-offset = <0>;
 		multiplex-ratio = <31>;
 		segment-remap;
 		com-invdir;
 		com-sequential;
 		prechargep = <0x22>;
 	};
 };
&spi1 {
  mosi-pin = <4>;
  // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
  sck-pin = <6>;
  miso-pin = <8>;

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <18>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
  };
};
